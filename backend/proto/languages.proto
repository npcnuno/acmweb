syntax = "proto3";

package languages;

// The Language message represents a language entity.
message Language {
  // Unique identifier for the language (could be generated by the service).
  string id = 1;
  // The language code must be non-empty and exactly two characters long.
  string code = 2;
}

// ------------------------------
// CRUD Operations Messages
// ------------------------------

// Create operation messages.
message CreateLanguageRequest {
  // The language entity to create.
  Language language = 1;
  string auth_token = 2;

}

message CreateLanguageResponse {
  // The created language entity.
  Language language = 1;
}

// Read operation messages.
message GetLanguageRequest {
  // Unique identifier of the language.
  string id = 1;
}

message GetLanguageResponse {
  // The requested language entity.
  Language language = 1;
}

// Update operation messages.
message UpdateLanguageRequest {
  // The language entity with updated fields.
  Language language = 1;
}

message UpdateLanguageResponse {
  // The updated language entity.
  Language language = 1;
}

// Delete operation messages.
message DeleteLanguageRequest {
  // Unique identifier of the language to delete.
  string id = 1;
}

message DeleteLanguageResponse {
  // Indicates whether the deletion was successful.
  bool success = 1;
}

// List operation messages.
message ListLanguagesRequest {
  // Optional: Pagination fields if needed.
  int32 page = 1;
  int32 page_size = 2;
}

message ListLanguagesResponse {
  // List of language entities.
  repeated Language languages = 1;
}

// ------------------------------
// Service Definition
// ------------------------------

service LanguagesAdministration {
  // Create a new language.
  rpc CreateLanguage(CreateLanguageRequest) returns (CreateLanguageResponse);

  // Retrieve an existing language by its ID.
  rpc GetLanguage(GetLanguageRequest) returns (GetLanguageResponse);

  // Update an existing language.
  rpc UpdateLanguage(UpdateLanguageRequest) returns (UpdateLanguageResponse);

  // Delete a language by its ID.
  rpc DeleteLanguage(DeleteLanguageRequest) returns (DeleteLanguageResponse);

  // List all languages with optional pagination.
  rpc ListLanguages(ListLanguagesRequest) returns (ListLanguagesResponse);
}
